name: Create PR

on:
  push:
    branches-ignore:
      - main

jobs:
  create_and_enable_automerge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set branch name as output
        id: branch_name
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"

      - name: Create Pull Request
        id: create_pr
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          destination_branch: "main"
          source_branch: ""
          pr_title: "${{ steps.branch_name.outputs.branch }}"
          pr_body: "This is an auto-create PR."
          draft: false


      - name: Assign PR to author
        if: steps.create_pr.outputs.pr_number
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/issues/${{ steps.create_pr.outputs.pr_number }}/assignees
          assignees: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}


      - name: Enable Auto Merge for PR
        if: steps.create_pr.outputs.pr_number
        run: |
          PR_ID=$(curl \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ steps.create_pr.outputs.pr_number }}" \
            | jq '.node_id')
          curl \
            -X POST \
            -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "query": "mutation($id: ID!) { enablePullRequestAutoMerge(input: { pullRequestId: $id }) { clientMutationId } }",
              "variables": {
                "id": "'"$PR_ID"'"
              }
            }' \
            "https://api.github.com/graphql"
        env:
          PR_ID: ${{ steps.create_pr.outputs.pr_number }}
